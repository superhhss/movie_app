{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRA0BeA,MArBf,YAA0D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OAAO,sBAAKC,UAAU,QAAf,UACH,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,SAAd,SAAyBD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAgB,oBAAgBL,UAAU,eAA1B,SAA0CI,GAAjCC,QAC7D,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQS,MAAM,EAAE,KAA9C,iBC0HGC,G,kNA/BbC,MAAM,CACJC,WAAW,EACXC,OAAS,I,EAEXC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGGJ,EAHH,EAERK,KACEA,KAASL,OAGb,EAAKM,SAAS,CAAEN,SAAQD,WAAU,IANxB,2C,uDAQZ,WACEQ,KAAKN,c,oBAEP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OAAO,0BAASV,UAAU,YAAnB,cAAiCS,EACtC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GAAK,OAChB,cAAC,EAAD,CAAsBxB,GAAIwB,EAAMxB,GAAIC,KAAMuB,EAAMvB,KAAMC,MAAOsB,EAAMtB,MAAOC,QAASqB,EAAMrB,QAASC,OAAQoB,EAAMC,mBAAoBpB,OAAQmB,EAAMnB,QAAtImB,EAAMxB,gB,GAzBT0B,IAAMC,YCjGxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.670bc9f3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./movie.css\";\r\n\r\n\r\nfunction Movie({id, year, title, summary, poster, genres}){\r\n    return <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title}></img>\r\n        <div className=\"movie_data\">\r\n            <h3 className=\"movie_title\">{title}</h3>\r\n            <h5 className=\"movie_year\">{year}</h5>\r\n            <ul className=\"genres\" >{genres.map((genre, index)=><li key={index} className=\"genres_genre\">{genre}</li>)}</ul>\r\n            <p className=\"movie_summary\">{summary.slice(0,150)}....</p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","\n//import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from './Movie';\nimport \"./app.css\";\n\n/*\nprops.fav 랑 같은 표현 {fav}\n\nfunction renderFood(dish){\n  return <Food name={dish.name} picture={dish.image} />\n}\n*/\n/*\nconst foodILike = [\n  { \n    id:1,\n    name:\"kimchi\",\n    image:\"https://search.pstatic.net/sunny/?src=https%3A%2F%2Fcdn2.iconfinder.com%2Fdata%2Ficons%2Fsocial-icons-color%2F512%2Fstackoverflow-512.png&type=sc960_832\",\n    rating:5\n  },\n  { \n    id:2,\n    name:\"kimchi2\",\n    image:\"https://search.pstatic.net/sunny/?src=http%3A%2F%2Fdryicons.com%2Fuploads%2Ficon%2Fpreview%2F8628%2F90f0d72b-d7f9-4324-af1b-45e0874979a4.png&type=sc960_832\",\n    rating:4\n  },\n  {\n    id:3,\n    name:\"kimchi3\",\n    image:\"https://search.pstatic.net/sunny/?src=https%3A%2F%2Fcdn2.iconfinder.com%2Fdata%2Ficons%2Fsocial-icons-color%2F512%2Fstackoverflow-512.png&type=sc960_832\",\n    rating:4.8\n  }\n];\n      \n\n\nFood.propTypes = {\n  name : PropTypes.string.isRequired,\n  picture : PropTypes.string.isRequired,\n  rating : PropTypes.number.isRequired\n};\n\n\nfunction Food({name, picture, rating}){\n  return <div>\n    <h1>i like {name}</h1>\n    <img src={picture} alt=\"\"/>\n  </div>\n}\n\nfunction App() {\n  return (\n    <div>\n      //{foodILike.map(renderFood)}\n      {foodILike.map(dish=><Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating}/>)};\n    </div>\n  );\n}\n*/\n/* 화면의 숫자 증감 \nclass App extends React.Component{\n  state={\n    count: 0\n  }\n  add = () => {\n    //this.setState({count: this.state.count + 1});\n    this.setState(current=> ({count : current.count +1}));\n    //state를 set할 때, 외부의 상태에 의존하지 않는 가장 좋은 방법\n\n  };\n  minus = () => {\n    this.setState(current => ({count: this.state.count - 1}));\n  };\n//setstate를 호출할대 새로운 state와 함께 re-render / diretly 접근시 안됨.\n  render(){\n    return (\n      <div>\n      <h1>i am a class {this.state.count}</h1>\n      <button onClick={this.add}>add</button>\n      <button onClick={this.minus}>minus</button>\n    </div>\n    )\n    }   \n      }\n*/\n/* 화면에 loading이 표시되었다가, 6초후 we are ready로 바뀌어 표시\nclass App extends React.Component{\n  state={\n    isLoading: true\n  }\n  componentDidMount(){\n    setTimeout(()=>this.setState({isLoading:false}), 6000);\n  }\n  render(){\n    const { isLoading } = this.state;\n    return <div>{isLoading? \"loading\" : \"we are ready\" }</div>\n      }\n    }\n*/\n\nclass App extends React.Component{\n  state={\n    isLoading: true,\n    movies : []\n  }\n  getMovies = async () =>{\n    const {\n      data : {\n        data : { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading:false });\n  }\n  componentDidMount(){\n    this.getMovies();\n  }\n  render(){\n    const { isLoading, movies } = this.state;\n    return <section className=\"container\"> {isLoading? (\n      <div className=\"loader\">\n        <span className=\"loader_text\">loading...</span>\n      </div>\n    ) : (\n      <div className=\"movies\">\n        {movies.map(movie =>  \n        (<Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres} />))}\n      </div>\n    )}\n    </section>;\n      }\n    }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}